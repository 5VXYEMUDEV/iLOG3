iLOG3是一个轻便易用、概念简单，高性能、多层选择使用、原生跨平台、（规范使用时）线程安全的遵循LGPL开源协议的标准c日志函数库。

基本特性如下：
・原生跨平台，这意味着你的软件在日志层面上是可轻松移植的，目前支持WINDOWS & UNIX & Linux ，iLOG3会在不同的操作系统上做相应的实现和优化
・五类日志等级
・变参的日志函数和日志宏
・行日志风格方案选配
・输出介质有文件、标准输出、标准错误输出、syslogd或WINDOWS EVENT、自定义介质

高级特性如下：
・支持日志选项组合
・支持按日志文件大小、每天、每小时转档
・支持行日志风格自定义回调函数，很容易定制自己的行日志格式
・支持日志文件的打开、输出、关闭自定义回调函数，很容易扩展成日志输出到远程日志服务器落地
・线程安全、简易MDC、基于线程本地存储的缺省全局日志句柄

分层实施“日志句柄层(LOG)->日志句柄集合层(LOGS)->配置文件接口层(LOGCONF、LOGSCONF)”。其实大部分用户的日志需求很简单，一个进程写一个日志文件（使用日志句柄层函数即可），但也考虑到另外一些用户有多个输出对象需求（使用日志句柄集合层函数即可），还有用户喜欢用外部配置文件来配置日志（使用配置文件接口层函数即可），不同用户在不同项目场景中使用iLOG3的不同层接口，不至于杀鸡用牛刀、小刀砍大树。

我还开发了一个姐妹函数库iLOG3CONF_SML来支持用SML标记语言配置文件来配置日志句柄，有兴趣的朋友也可以调用日志句柄层或日志句柄集合层函数开发自己的iLOG3CONF_*，实现用XML或现在流行的json或自己项目统一配置文件格式，来实现用外部配置文件配置iLOG3日志句柄环境。

此外，源代码结构也比较简单，只有三对源文件，便于搬运、嵌入和修改。
